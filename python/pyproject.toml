[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "fileforge"
version = "1.0.0"
description = "Framework avançado de conversão de arquivos multi-formato"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Julio Amorim", email = "contato@julioamorim.com.br"},
]
maintainers = [
    {name = "Julio Amorim", email = "contato@julioamorim.com.br"},
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Multimedia :: Graphics :: Graphics Conversion",
    "Topic :: Office/Business :: Office Suites",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
keywords = [
    "file-conversion",
    "multi-format", 
    "pdf",
    "docx",
    "image",
    "audio",
    "video",
    "ocr",
    "metadata",
    "batch-conversion"
]
dependencies = [
    "Pillow>=10.0.0",
    "PyPDF2>=3.0.0",
    "python-docx>=1.1.0",
    "openpyxl>=3.1.0",
    "markdown>=3.5.0",
    "beautifulsoup4>=4.12.0",
    "pytesseract>=0.3.10",
    "moviepy>=1.0.3",
    "pydub>=0.25.1",
    "requests>=2.31.0",
    "click>=8.1.0",
    "tqdm>=4.66.0",
    "aiofiles>=23.2.1",
    "aiohttp>=3.9.0",
    "python-magic>=0.4.27",
]
requires-python = ">=3.8"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.7.0",
    "pre-commit>=3.6.0",
]
ai = [
    "openai>=1.6.0",
    "transformers>=4.36.0",
]
full = [
    "opencv-python>=4.8.0",
    "scikit-image>=0.22.0",
    "librosa>=0.10.0",
]

[project.urls]
Homepage = "https://github.com/julioamorimdev/FileForge"
Documentation = "https://github.com/julioamorimdev/FileForge/wiki"
Repository = "https://github.com/julioamorimdev/FileForge.git"
"Bug Tracker" = "https://github.com/julioamorimdev/FileForge/issues"
Changelog = "https://github.com/julioamorimdev/FileForge/blob/main/CHANGELOG.md"

[project.scripts]
fileforge = "fileforge.cli:main"

[tool.setuptools]
package-dir = {"" = "."}

[tool.setuptools.packages.find]
where = ["."]
include = ["fileforge*"]
exclude = ["tests*"]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=fileforge",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["fileforge"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
